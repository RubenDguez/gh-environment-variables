name: READ VARIABLES

on:
  schedule:
    - cron: "*/5 * * * *"

  push:
    branches:
      - main
    
  workflow_dispatch:
    inputs:
      SANDBOX:
        description: 'Which sandbox do you want to perform the action against? '
        required: true
        default: NULL
        type: choice
        options:
          - neersit
          - neerqa
          - neeruat

env:
  SANDBOX_SECRETS: ${{ secrets.SANDBOX_SECRETS }}

jobs:
  setup-matrix:
    if: ${{ github.event_name == 'push' || github.event == 'schedule' }}
    runs-on: ubuntu-latest
    outputs:
      SANDBOXES: ${{ steps.setup-sandboxes.outputs.SANDBOXES }}
    steps:
      - name: üõ∏ Extract sandboxes
        id: extract-sandboxes
        uses: actions/github-script@v7
        with:
          script: |
            // JAVASCRIPT CODE
            const { SANDBOX_SECRETS } = process.env
            return Object.keys(JSON.parse(SANDBOX_SECRETS))

      - name: ‚öôÔ∏è setup sandboxes
        id: setup-sandboxes
        run: |
          echo 'SANDBOXES=${{ steps.extract-sandboxes.outputs.result }}' >> $GITHUB_OUTPUT

  matrix:
    if: ${{ github.event_name == 'push' || github.event == 'schedule' }}
    needs: setup-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sandbox: ${{ fromJson(needs.setup-matrix.outputs.SANDBOXES) }}

    steps:
      - name: üöÄ Set Password
        env:
          SANDBOX: ${{ matrix.sandbox }}
        uses: actions/github-script@v7
        id: set-password
        with:
          result-encoding: string
          script: |
            // JAVASCRIPT CODE
            const envJson = JSON.parse(process.env.SANDBOX_SECRETS);
            const { SANDBOX } = process.env
            return envJson[SANDBOX]
      
      - name: üñ®Ô∏è Print Password
        run: echo "${{steps.set-password.outputs.result}}"

  dispatch_workflow:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest

    steps:
      - name: üöÄ Set Password
        env:
          SANDBOX: ${{ inputs.SANDBOX }}
        uses: actions/github-script@v7
        id: set-password
        with:
          result-encoding: string
          script: |
            // JAVASCRIPT CODE
            const envJson = JSON.parse(process.env.SANDBOX_SECRETS);
            const { SANDBOX } = process.env
            return envJson[SANDBOX]
        
      - name: üñ®Ô∏è Print Password
        run: echo "${{steps.set-password.outputs.result}}"
